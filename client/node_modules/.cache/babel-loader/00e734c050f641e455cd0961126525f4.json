{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _slicedToArray = function () {\n  function sliceIterator(arr, i) {\n    var _arr = [];\n    var _n = true;\n    var _d = false;\n    var _e = undefined;\n\n    try {\n      for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n        _arr.push(_s.value);\n\n        if (i && _arr.length === i) break;\n      }\n    } catch (err) {\n      _d = true;\n      _e = err;\n    } finally {\n      try {\n        if (!_n && _i[\"return\"]) _i[\"return\"]();\n      } finally {\n        if (_d) throw _e;\n      }\n    }\n\n    return _arr;\n  }\n\n  return function (arr, i) {\n    if (Array.isArray(arr)) {\n      return arr;\n    } else if (Symbol.iterator in Object(arr)) {\n      return sliceIterator(arr, i);\n    } else {\n      throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n    }\n  };\n}();\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _d3Shape = require('d3-shape');\n\nvar _Layout2 = require('./Layout');\n\nvar _Layout3 = _interopRequireDefault(_Layout2);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _toConsumableArray(arr) {\n  if (Array.isArray(arr)) {\n    for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) {\n      arr2[i] = arr[i];\n    }\n\n    return arr2;\n  } else {\n    return Array.from(arr);\n  }\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar Stack = function (_Layout) {\n  _inherits(Stack, _Layout);\n\n  function Stack() {\n    _classCallCheck(this, Stack);\n\n    return _possibleConstructorReturn(this, (Stack.__proto__ || Object.getPrototypeOf(Stack)).apply(this, arguments));\n  }\n\n  _createClass(Stack, [{\n    key: 'getSchema',\n    value: function getSchema() {\n      return {\n        layout: _d3Shape.stack,\n        layoutProps: ['keys', 'value', 'order', 'offset'],\n        selectStylesToTween: function selectStylesToTween(d) {\n          return d.reduce(function (acc, child, index) {\n            var _extends2;\n\n            return _extends({}, acc, (_extends2 = {}, _defineProperty(_extends2, index + '_0', child[0]), _defineProperty(_extends2, index + '_1', child[1]), _extends2));\n          }, {});\n        }\n      };\n    }\n  }, {\n    key: 'transformInterpolatedStyles',\n    value: function transformInterpolatedStyles(data) {\n      return data.map(function (d) {\n        var data = d.data,\n            style = d.style;\n        var result = [].concat(_toConsumableArray(data));\n        Object.keys(style).forEach(function (key) {\n          var _key$split = key.split('_'),\n              _key$split2 = _slicedToArray(_key$split, 2),\n              row = _key$split2[0],\n              col = _key$split2[1];\n\n          result[row][col] = style[key];\n        });\n        return result;\n      });\n    }\n  }, {\n    key: 'getData',\n    value: function getData() {\n      return this.getLayout()(this.props.data);\n    }\n  }]);\n\n  return Stack;\n}(_Layout3.default);\n\nStack.displayName = 'Stack';\nStack.propTypes = {\n  data: _propTypes2.default.array.isRequired,\n  keys: _propTypes2.default.array,\n  value: _propTypes2.default.func,\n  order: _propTypes2.default.array,\n  offset: _propTypes2.default.func\n};\nStack.defaultProps = _extends({}, _Layout3.default.defaultProps);\nexports.default = Stack;","map":null,"metadata":{},"sourceType":"script"}