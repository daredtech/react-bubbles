{"ast":null,"code":"import _defineProperty from \"/Users/red/Desktop/lambda/projects/react-bubbles/client/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"/Users/red/Desktop/lambda/projects/react-bubbles/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/red/Desktop/lambda/projects/react-bubbles/client/src/components/ColorList.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState } from \"react\"; // import axios from \"axios\";\n\nimport axiosWithAuth from \"../utilities/axiosWithAuth \";\nvar initialColor = {\n  color: \"\",\n  code: {\n    hex: \"\"\n  }\n};\n\nvar ColorList = function ColorList(_ref) {\n  var colors = _ref.colors,\n      updateColors = _ref.updateColors;\n  console.log(colors);\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      editing = _useState2[0],\n      setEditing = _useState2[1];\n\n  var _useState3 = useState(initialColor),\n      _useState4 = _slicedToArray(_useState3, 2),\n      colorToEdit = _useState4[0],\n      setColorToEdit = _useState4[1];\n\n  var editColor = function editColor(color) {\n    setEditing(true);\n    setColorToEdit(color);\n  };\n\n  var saveEdit = function saveEdit(e) {\n    e.preventDefault(); // Make a put request to save your updated color\n    // think about where will you get the id from...\n    // where is is saved right now?\n  };\n\n  var deleteColor = function deleteColor(color) {\n    console.log('delete was triggered with the following color: ', color); // axios.delete(`http://localhost:5000/api/colors/:{color.id}`)\n\n    axiosWithAuth().delete(\"http://localhost:5000/api/colors/{color.id}\").then(function (response) {\n      console.log('delete response: ', response);\n    }).catch(function (error) {\n      console.log('unable to delete: ', error);\n    });\n    removeColor(color.id);\n  };\n\n  var removeColor = function removeColor(id) {\n    setColorList(colors.filter(function (color1) {\n      return color1.id != id;\n    }));\n  };\n\n  return React.createElement(\"div\", {\n    className: \"colors-wrap\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, \"colors\"), React.createElement(\"ul\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, colors.map(function (color) {\n    return React.createElement(\"li\", {\n      key: color.color,\n      onClick: function onClick() {\n        return editColor(color);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"delete\",\n      onClick: function onClick() {\n        return deleteColor(color);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, \"x\"), \" \", color.color), React.createElement(\"div\", {\n      className: \"color-box\",\n      style: {\n        backgroundColor: color.code.hex\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }));\n  })), editing && React.createElement(\"form\", {\n    onSubmit: saveEdit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, React.createElement(\"legend\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, \"edit color\"), React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, \"color name:\", React.createElement(\"input\", {\n    onChange: function onChange(e) {\n      return setColorToEdit(_objectSpread({}, colorToEdit, {\n        color: e.target.value\n      }));\n    },\n    value: colorToEdit.color,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  })), React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }, \"hex code:\", React.createElement(\"input\", {\n    onChange: function onChange(e) {\n      return setColorToEdit(_objectSpread({}, colorToEdit, {\n        code: {\n          hex: e.target.value\n        }\n      }));\n    },\n    value: colorToEdit.code.hex,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"button-row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  }, \"save\"), React.createElement(\"button\", {\n    onClick: function onClick() {\n      return setEditing(false);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95\n    },\n    __self: this\n  }, \"cancel\"))), React.createElement(\"div\", {\n    className: \"spacer\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99\n    },\n    __self: this\n  }));\n};\n\nexport default ColorList;","map":{"version":3,"sources":["/Users/red/Desktop/lambda/projects/react-bubbles/client/src/components/ColorList.js"],"names":["React","useState","axiosWithAuth","initialColor","color","code","hex","ColorList","colors","updateColors","console","log","editing","setEditing","colorToEdit","setColorToEdit","editColor","saveEdit","e","preventDefault","deleteColor","delete","then","response","catch","error","removeColor","id","setColorList","filter","color1","map","backgroundColor","target","value"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\n// import axios from \"axios\";\nimport axiosWithAuth from \"../utilities/axiosWithAuth \";\n\nconst initialColor = {\n  color: \"\",\n  code: { hex: \"\" }\n};\n\nconst ColorList = ({ colors, updateColors }) => {\n  console.log(colors);\n  const [editing, setEditing] = useState(false);\n  const [colorToEdit, setColorToEdit] = useState(initialColor);\n\n  const editColor = color => {\n    setEditing(true);\n    setColorToEdit(color);\n  };\n\n  const saveEdit = e => {\n    e.preventDefault();\n    // Make a put request to save your updated color\n    // think about where will you get the id from...\n    // where is is saved right now?\n  };\n\n  const deleteColor = color => {\n    console.log('delete was triggered with the following color: ', color);\n    // axios.delete(`http://localhost:5000/api/colors/:{color.id}`)\n    axiosWithAuth()\n    .delete(`http://localhost:5000/api/colors/{color.id}`)\n \n    .then(response => {\n      console.log('delete response: ', response);\n    })\n    .catch(error => {\n      console.log('unable to delete: ', error)\n    })\n\n    removeColor(color.id);\n\n\n  };\n\n  const removeColor = id => {\n    setColorList(colors.filter(color1 => color1.id != id));\n  }\n\n\n  return (\n    <div className=\"colors-wrap\">\n      <p>colors</p>\n      <ul>\n        {colors.map(color => (\n          <li key={color.color} onClick={() => editColor(color)}>\n            <span>\n              <span className=\"delete\" onClick={() => deleteColor(color)}>\n                x\n              </span>{\" \"}\n              {color.color}\n            </span>\n            <div\n              className=\"color-box\"\n              style={{ backgroundColor: color.code.hex }}\n            />\n          </li>\n        ))}\n      </ul>\n      {editing && (\n        <form onSubmit={saveEdit}>\n          <legend>edit color</legend>\n          <label>\n            color name:\n            <input\n              onChange={e =>\n                setColorToEdit({ ...colorToEdit, color: e.target.value })\n              }\n              value={colorToEdit.color}\n            />\n          </label>\n          <label>\n            hex code:\n            <input\n              onChange={e =>\n                setColorToEdit({\n                  ...colorToEdit,\n                  code: { hex: e.target.value }\n                })\n              }\n              value={colorToEdit.code.hex}\n            />\n          </label>\n          <div className=\"button-row\">\n            <button type=\"submit\">save</button>\n            <button onClick={() => setEditing(false)}>cancel</button>\n          </div>\n        </form>\n      )}\n      <div className=\"spacer\" />\n      {/* stretch - build another form here to add a color */}\n    </div>\n  );\n};\n\nexport default ColorList;\n"]},"metadata":{},"sourceType":"module"}